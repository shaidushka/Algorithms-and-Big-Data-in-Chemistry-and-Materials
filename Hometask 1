{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNn39k8cHdaxiezGQKDNvoT",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/shaidushka/Algorithms-and-Big-Data-in-Chemistry-and-Materials/blob/main/Untitled15.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd"
      ],
      "metadata": {
        "id": "mQuQuxgJqXL5"
      },
      "execution_count": 55,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n",
        "data = '/content/drive/MyDrive/qm9.csv'"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hcKkFSwnqlG2",
        "outputId": "71d423f4-8e5b-4b79-875f-31e9b15ffa21"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv(data, sep=\",\")\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "M9MBpe_tqshi",
        "outputId": "e89ef25b-7f58-4005-f6d1-18e12b04453f"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  mol_id smiles          A           B           C      mu  alpha    homo  \\\n",
              "0  gdb_1      C  157.71180  157.709970  157.706990  0.0000  13.21 -0.3877   \n",
              "1  gdb_2      N  293.60975  293.541110  191.393970  1.6256   9.46 -0.2570   \n",
              "2  gdb_3      O  799.58812  437.903860  282.945450  1.8511   6.31 -0.2928   \n",
              "3  gdb_4    C#C    0.00000   35.610036   35.610036  0.0000  16.28 -0.2845   \n",
              "4  gdb_5    C#N    0.00000   44.593883   44.593883  2.8937  12.99 -0.3604   \n",
              "\n",
              "     lumo     gap       r2      zpve         u0       u298       h298  \\\n",
              "0  0.1171  0.5048  35.3641  0.044749 -40.478930 -40.476062 -40.475117   \n",
              "1  0.0829  0.3399  26.1563  0.034358 -56.525887 -56.523026 -56.522082   \n",
              "2  0.0687  0.3615  19.0002  0.021375 -76.404702 -76.401867 -76.400922   \n",
              "3  0.0506  0.3351  59.5248  0.026841 -77.308427 -77.305527 -77.304583   \n",
              "4  0.0191  0.3796  48.7476  0.016601 -93.411888 -93.409370 -93.408425   \n",
              "\n",
              "        g298     cv  \n",
              "0 -40.498597  6.469  \n",
              "1 -56.544961  6.316  \n",
              "2 -76.422349  6.002  \n",
              "3 -77.327429  8.574  \n",
              "4 -93.431246  6.278  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f26c1a04-59ed-4d96-81c8-826fc746b5c4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>mol_id</th>\n",
              "      <th>smiles</th>\n",
              "      <th>A</th>\n",
              "      <th>B</th>\n",
              "      <th>C</th>\n",
              "      <th>mu</th>\n",
              "      <th>alpha</th>\n",
              "      <th>homo</th>\n",
              "      <th>lumo</th>\n",
              "      <th>gap</th>\n",
              "      <th>r2</th>\n",
              "      <th>zpve</th>\n",
              "      <th>u0</th>\n",
              "      <th>u298</th>\n",
              "      <th>h298</th>\n",
              "      <th>g298</th>\n",
              "      <th>cv</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>gdb_1</td>\n",
              "      <td>C</td>\n",
              "      <td>157.71180</td>\n",
              "      <td>157.709970</td>\n",
              "      <td>157.706990</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>13.21</td>\n",
              "      <td>-0.3877</td>\n",
              "      <td>0.1171</td>\n",
              "      <td>0.5048</td>\n",
              "      <td>35.3641</td>\n",
              "      <td>0.044749</td>\n",
              "      <td>-40.478930</td>\n",
              "      <td>-40.476062</td>\n",
              "      <td>-40.475117</td>\n",
              "      <td>-40.498597</td>\n",
              "      <td>6.469</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>gdb_2</td>\n",
              "      <td>N</td>\n",
              "      <td>293.60975</td>\n",
              "      <td>293.541110</td>\n",
              "      <td>191.393970</td>\n",
              "      <td>1.6256</td>\n",
              "      <td>9.46</td>\n",
              "      <td>-0.2570</td>\n",
              "      <td>0.0829</td>\n",
              "      <td>0.3399</td>\n",
              "      <td>26.1563</td>\n",
              "      <td>0.034358</td>\n",
              "      <td>-56.525887</td>\n",
              "      <td>-56.523026</td>\n",
              "      <td>-56.522082</td>\n",
              "      <td>-56.544961</td>\n",
              "      <td>6.316</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>gdb_3</td>\n",
              "      <td>O</td>\n",
              "      <td>799.58812</td>\n",
              "      <td>437.903860</td>\n",
              "      <td>282.945450</td>\n",
              "      <td>1.8511</td>\n",
              "      <td>6.31</td>\n",
              "      <td>-0.2928</td>\n",
              "      <td>0.0687</td>\n",
              "      <td>0.3615</td>\n",
              "      <td>19.0002</td>\n",
              "      <td>0.021375</td>\n",
              "      <td>-76.404702</td>\n",
              "      <td>-76.401867</td>\n",
              "      <td>-76.400922</td>\n",
              "      <td>-76.422349</td>\n",
              "      <td>6.002</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>gdb_4</td>\n",
              "      <td>C#C</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>35.610036</td>\n",
              "      <td>35.610036</td>\n",
              "      <td>0.0000</td>\n",
              "      <td>16.28</td>\n",
              "      <td>-0.2845</td>\n",
              "      <td>0.0506</td>\n",
              "      <td>0.3351</td>\n",
              "      <td>59.5248</td>\n",
              "      <td>0.026841</td>\n",
              "      <td>-77.308427</td>\n",
              "      <td>-77.305527</td>\n",
              "      <td>-77.304583</td>\n",
              "      <td>-77.327429</td>\n",
              "      <td>8.574</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>gdb_5</td>\n",
              "      <td>C#N</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>44.593883</td>\n",
              "      <td>44.593883</td>\n",
              "      <td>2.8937</td>\n",
              "      <td>12.99</td>\n",
              "      <td>-0.3604</td>\n",
              "      <td>0.0191</td>\n",
              "      <td>0.3796</td>\n",
              "      <td>48.7476</td>\n",
              "      <td>0.016601</td>\n",
              "      <td>-93.411888</td>\n",
              "      <td>-93.409370</td>\n",
              "      <td>-93.408425</td>\n",
              "      <td>-93.431246</td>\n",
              "      <td>6.278</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f26c1a04-59ed-4d96-81c8-826fc746b5c4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f26c1a04-59ed-4d96-81c8-826fc746b5c4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f26c1a04-59ed-4d96-81c8-826fc746b5c4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-385ac320-a857-4833-85a1-f5bcfec8d92c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-385ac320-a857-4833-85a1-f5bcfec8d92c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-385ac320-a857-4833-85a1-f5bcfec8d92c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.sample(n=20000, random_state=26)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 443
        },
        "id": "pZJ2n-ijrjmQ",
        "outputId": "860d950a-b2fa-444e-a2cc-00f8c3f9ba22"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          mol_id              smiles        A        B        C      mu  \\\n",
              "85459  gdb_85460    OC1CC(=O)OC11CC1  2.56798  1.54104  1.16855  4.5081   \n",
              "55139  gdb_55140    NC(=O)C1CC2CC1O2  3.48438  1.31673  1.14460  4.3465   \n",
              "34693  gdb_34694  N#CC1C2C3C2C2C3N12  4.06313  1.54811  1.41644  4.7928   \n",
              "72513  gdb_72514   OC12COC(C=C1)C=C2  2.79725  1.77450  1.74838  2.2454   \n",
              "49374  gdb_49375    N=CN1C(CC1=O)C#C  2.38691  1.40907  0.96599  4.9818   \n",
              "...          ...                 ...      ...      ...      ...     ...   \n",
              "92732  gdb_92733   CC1=NCC(O)C(=O)N1  3.06996  1.35090  0.97329  3.2425   \n",
              "51157  gdb_51158     O=COC12CC1NC2=O  3.16465  1.24088  0.98871  5.2646   \n",
              "19663  gdb_19664      OC1C2CC3OC2C13  4.45415  2.05419  1.93748  2.2342   \n",
              "36491  gdb_36492      N#CCC1COC2CC12  4.00621  1.03575  0.90309  4.1716   \n",
              "97037  gdb_97038     CN=C1NCC(=O)N1C  3.13596  1.31143  0.94233  2.8455   \n",
              "\n",
              "       alpha    homo    lumo     gap         r2      zpve          u0  \\\n",
              "85459  68.95 -0.2628  0.0135  0.2764  1073.2660  0.135441 -458.990458   \n",
              "55139  70.87 -0.2434  0.0312  0.2746  1094.9083  0.149009 -439.095881   \n",
              "34693  70.69 -0.2489  0.0269  0.2758   907.0829  0.114997 -379.618989   \n",
              "72513  71.27 -0.2326 -0.0123  0.2204   881.3908  0.136878 -421.814082   \n",
              "49374  76.29 -0.2548 -0.0246  0.2302  1182.8383  0.111296 -416.788610   \n",
              "...      ...     ...     ...     ...        ...       ...         ...   \n",
              "92732  71.07 -0.2548 -0.0250  0.2298  1179.2349  0.136685 -455.203218   \n",
              "51157  63.99 -0.2632 -0.0169  0.2463  1139.9574  0.099739 -473.821402   \n",
              "19663  62.66 -0.2376  0.0701  0.3077   735.6903  0.132838 -383.690029   \n",
              "36491  74.79 -0.2442  0.0319  0.2761  1269.4140  0.149202 -401.949715   \n",
              "97037  77.61 -0.2309  0.0041  0.2350  1229.2881  0.148205 -435.324977   \n",
              "\n",
              "             u298        h298        g298      cv  \n",
              "85459 -458.982402 -458.981458 -459.023203  30.870  \n",
              "55139 -439.087845 -439.086901 -439.129191  30.598  \n",
              "34693 -379.612807 -379.611863 -379.649590  25.074  \n",
              "72513 -421.807077 -421.806132 -421.844762  29.538  \n",
              "49374 -416.779972 -416.779028 -416.822522  30.865  \n",
              "...           ...         ...         ...     ...  \n",
              "92732 -455.194795 -455.193851 -455.236174  31.670  \n",
              "51157 -473.813489 -473.812545 -473.855040  28.253  \n",
              "19663 -383.684173 -383.683229 -383.719659  24.378  \n",
              "36491 -401.941802 -401.940857 -401.982652  30.040  \n",
              "97037 -435.315661 -435.314717 -435.359403  32.861  \n",
              "\n",
              "[20000 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5c0905d9-83b1-476f-b6aa-4802a088daea\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>mol_id</th>\n",
              "      <th>smiles</th>\n",
              "      <th>A</th>\n",
              "      <th>B</th>\n",
              "      <th>C</th>\n",
              "      <th>mu</th>\n",
              "      <th>alpha</th>\n",
              "      <th>homo</th>\n",
              "      <th>lumo</th>\n",
              "      <th>gap</th>\n",
              "      <th>r2</th>\n",
              "      <th>zpve</th>\n",
              "      <th>u0</th>\n",
              "      <th>u298</th>\n",
              "      <th>h298</th>\n",
              "      <th>g298</th>\n",
              "      <th>cv</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>85459</th>\n",
              "      <td>gdb_85460</td>\n",
              "      <td>OC1CC(=O)OC11CC1</td>\n",
              "      <td>2.56798</td>\n",
              "      <td>1.54104</td>\n",
              "      <td>1.16855</td>\n",
              "      <td>4.5081</td>\n",
              "      <td>68.95</td>\n",
              "      <td>-0.2628</td>\n",
              "      <td>0.0135</td>\n",
              "      <td>0.2764</td>\n",
              "      <td>1073.2660</td>\n",
              "      <td>0.135441</td>\n",
              "      <td>-458.990458</td>\n",
              "      <td>-458.982402</td>\n",
              "      <td>-458.981458</td>\n",
              "      <td>-459.023203</td>\n",
              "      <td>30.870</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55139</th>\n",
              "      <td>gdb_55140</td>\n",
              "      <td>NC(=O)C1CC2CC1O2</td>\n",
              "      <td>3.48438</td>\n",
              "      <td>1.31673</td>\n",
              "      <td>1.14460</td>\n",
              "      <td>4.3465</td>\n",
              "      <td>70.87</td>\n",
              "      <td>-0.2434</td>\n",
              "      <td>0.0312</td>\n",
              "      <td>0.2746</td>\n",
              "      <td>1094.9083</td>\n",
              "      <td>0.149009</td>\n",
              "      <td>-439.095881</td>\n",
              "      <td>-439.087845</td>\n",
              "      <td>-439.086901</td>\n",
              "      <td>-439.129191</td>\n",
              "      <td>30.598</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34693</th>\n",
              "      <td>gdb_34694</td>\n",
              "      <td>N#CC1C2C3C2C2C3N12</td>\n",
              "      <td>4.06313</td>\n",
              "      <td>1.54811</td>\n",
              "      <td>1.41644</td>\n",
              "      <td>4.7928</td>\n",
              "      <td>70.69</td>\n",
              "      <td>-0.2489</td>\n",
              "      <td>0.0269</td>\n",
              "      <td>0.2758</td>\n",
              "      <td>907.0829</td>\n",
              "      <td>0.114997</td>\n",
              "      <td>-379.618989</td>\n",
              "      <td>-379.612807</td>\n",
              "      <td>-379.611863</td>\n",
              "      <td>-379.649590</td>\n",
              "      <td>25.074</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>72513</th>\n",
              "      <td>gdb_72514</td>\n",
              "      <td>OC12COC(C=C1)C=C2</td>\n",
              "      <td>2.79725</td>\n",
              "      <td>1.77450</td>\n",
              "      <td>1.74838</td>\n",
              "      <td>2.2454</td>\n",
              "      <td>71.27</td>\n",
              "      <td>-0.2326</td>\n",
              "      <td>-0.0123</td>\n",
              "      <td>0.2204</td>\n",
              "      <td>881.3908</td>\n",
              "      <td>0.136878</td>\n",
              "      <td>-421.814082</td>\n",
              "      <td>-421.807077</td>\n",
              "      <td>-421.806132</td>\n",
              "      <td>-421.844762</td>\n",
              "      <td>29.538</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49374</th>\n",
              "      <td>gdb_49375</td>\n",
              "      <td>N=CN1C(CC1=O)C#C</td>\n",
              "      <td>2.38691</td>\n",
              "      <td>1.40907</td>\n",
              "      <td>0.96599</td>\n",
              "      <td>4.9818</td>\n",
              "      <td>76.29</td>\n",
              "      <td>-0.2548</td>\n",
              "      <td>-0.0246</td>\n",
              "      <td>0.2302</td>\n",
              "      <td>1182.8383</td>\n",
              "      <td>0.111296</td>\n",
              "      <td>-416.788610</td>\n",
              "      <td>-416.779972</td>\n",
              "      <td>-416.779028</td>\n",
              "      <td>-416.822522</td>\n",
              "      <td>30.865</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>92732</th>\n",
              "      <td>gdb_92733</td>\n",
              "      <td>CC1=NCC(O)C(=O)N1</td>\n",
              "      <td>3.06996</td>\n",
              "      <td>1.35090</td>\n",
              "      <td>0.97329</td>\n",
              "      <td>3.2425</td>\n",
              "      <td>71.07</td>\n",
              "      <td>-0.2548</td>\n",
              "      <td>-0.0250</td>\n",
              "      <td>0.2298</td>\n",
              "      <td>1179.2349</td>\n",
              "      <td>0.136685</td>\n",
              "      <td>-455.203218</td>\n",
              "      <td>-455.194795</td>\n",
              "      <td>-455.193851</td>\n",
              "      <td>-455.236174</td>\n",
              "      <td>31.670</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51157</th>\n",
              "      <td>gdb_51158</td>\n",
              "      <td>O=COC12CC1NC2=O</td>\n",
              "      <td>3.16465</td>\n",
              "      <td>1.24088</td>\n",
              "      <td>0.98871</td>\n",
              "      <td>5.2646</td>\n",
              "      <td>63.99</td>\n",
              "      <td>-0.2632</td>\n",
              "      <td>-0.0169</td>\n",
              "      <td>0.2463</td>\n",
              "      <td>1139.9574</td>\n",
              "      <td>0.099739</td>\n",
              "      <td>-473.821402</td>\n",
              "      <td>-473.813489</td>\n",
              "      <td>-473.812545</td>\n",
              "      <td>-473.855040</td>\n",
              "      <td>28.253</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19663</th>\n",
              "      <td>gdb_19664</td>\n",
              "      <td>OC1C2CC3OC2C13</td>\n",
              "      <td>4.45415</td>\n",
              "      <td>2.05419</td>\n",
              "      <td>1.93748</td>\n",
              "      <td>2.2342</td>\n",
              "      <td>62.66</td>\n",
              "      <td>-0.2376</td>\n",
              "      <td>0.0701</td>\n",
              "      <td>0.3077</td>\n",
              "      <td>735.6903</td>\n",
              "      <td>0.132838</td>\n",
              "      <td>-383.690029</td>\n",
              "      <td>-383.684173</td>\n",
              "      <td>-383.683229</td>\n",
              "      <td>-383.719659</td>\n",
              "      <td>24.378</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36491</th>\n",
              "      <td>gdb_36492</td>\n",
              "      <td>N#CCC1COC2CC12</td>\n",
              "      <td>4.00621</td>\n",
              "      <td>1.03575</td>\n",
              "      <td>0.90309</td>\n",
              "      <td>4.1716</td>\n",
              "      <td>74.79</td>\n",
              "      <td>-0.2442</td>\n",
              "      <td>0.0319</td>\n",
              "      <td>0.2761</td>\n",
              "      <td>1269.4140</td>\n",
              "      <td>0.149202</td>\n",
              "      <td>-401.949715</td>\n",
              "      <td>-401.941802</td>\n",
              "      <td>-401.940857</td>\n",
              "      <td>-401.982652</td>\n",
              "      <td>30.040</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97037</th>\n",
              "      <td>gdb_97038</td>\n",
              "      <td>CN=C1NCC(=O)N1C</td>\n",
              "      <td>3.13596</td>\n",
              "      <td>1.31143</td>\n",
              "      <td>0.94233</td>\n",
              "      <td>2.8455</td>\n",
              "      <td>77.61</td>\n",
              "      <td>-0.2309</td>\n",
              "      <td>0.0041</td>\n",
              "      <td>0.2350</td>\n",
              "      <td>1229.2881</td>\n",
              "      <td>0.148205</td>\n",
              "      <td>-435.324977</td>\n",
              "      <td>-435.315661</td>\n",
              "      <td>-435.314717</td>\n",
              "      <td>-435.359403</td>\n",
              "      <td>32.861</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20000 rows × 17 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5c0905d9-83b1-476f-b6aa-4802a088daea')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5c0905d9-83b1-476f-b6aa-4802a088daea button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5c0905d9-83b1-476f-b6aa-4802a088daea');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b95b51bc-c302-4edb-a101-393b11e2eaf0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b95b51bc-c302-4edb-a101-393b11e2eaf0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b95b51bc-c302-4edb-a101-393b11e2eaf0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 20000,\n  \"fields\": [\n    {\n      \"column\": \"mol_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20000,\n        \"samples\": [\n          \"gdb_52833\",\n          \"gdb_34224\",\n          \"gdb_27875\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"smiles\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19994,\n        \"samples\": [\n          \"CC12OC1C=CCC2=O\",\n          \"CC(=O)NC(=O)C=O\",\n          \"OC12CC3(O)C(CC13)C2\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1645.1582491572549,\n        \"min\": 1.27314,\n        \"max\": 232663.7888,\n        \"num_unique_values\": 19345,\n        \"samples\": [\n          3.47489,\n          2.86702,\n          4.01043\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"B\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4711966780405124,\n        \"min\": 0.33712,\n        \"max\": 10.24473,\n        \"num_unique_values\": 18743,\n        \"samples\": [\n          1.34531,\n          1.42168,\n          0.67653\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"C\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.33814935948109587,\n        \"min\": 0.33118,\n        \"max\": 9.07368,\n        \"num_unique_values\": 18144,\n        \"samples\": [\n          1.13649,\n          1.23149,\n          1.10745\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mu\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.5576105923849892,\n        \"min\": 0.0,\n        \"max\": 22.9605,\n        \"num_unique_values\": 16445,\n        \"samples\": [\n          4.4391,\n          0.6064,\n          1.4562\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"alpha\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.218449180240176,\n        \"min\": 15.93,\n        \"max\": 132.47,\n        \"num_unique_values\": 3828,\n        \"samples\": [\n          69.76,\n          56.22,\n          71.18\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"homo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.02236022487862781,\n        \"min\": -0.4286,\n        \"max\": -0.1177,\n        \"num_unique_values\": 1447,\n        \"samples\": [\n          -0.2719,\n          -0.2528,\n          -0.2821\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lumo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04691445762264231,\n        \"min\": -0.175,\n        \"max\": 0.1935,\n        \"num_unique_values\": 2094,\n        \"samples\": [\n          -0.0939,\n          0.0425,\n          0.0604\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gap\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04769431256092605,\n        \"min\": 0.042,\n        \"max\": 0.6221,\n        \"num_unique_values\": 2235,\n        \"samples\": [\n          0.3508,\n          0.3525,\n          0.2512\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 279.08551513476556,\n        \"min\": 166.9728,\n        \"max\": 3197.5687,\n        \"num_unique_values\": 19970,\n        \"samples\": [\n          1049.0258,\n          925.3434,\n          1176.9335\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"zpve\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.033296909185874135,\n        \"min\": 0.017147,\n        \"max\": 0.273168,\n        \"num_unique_values\": 17776,\n        \"samples\": [\n          0.149134,\n          0.157483,\n          0.120367\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"u0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40.179906603919115,\n        \"min\": -714.568061,\n        \"max\": -153.787612,\n        \"num_unique_values\": 19961,\n        \"samples\": [\n          -419.224618,\n          -365.037348,\n          -385.866105\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"u298\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40.17970085523574,\n        \"min\": -714.560153,\n        \"max\": -153.783728,\n        \"num_unique_values\": 19972,\n        \"samples\": [\n          -379.8618,\n          -436.637555,\n          -437.923101\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"h298\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40.179700858975686,\n        \"min\": -714.559209,\n        \"max\": -153.782784,\n        \"num_unique_values\": 19971,\n        \"samples\": [\n          -417.992733,\n          -436.990107,\n          -437.922156\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"g298\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40.18039598112723,\n        \"min\": -714.602138,\n        \"max\": -153.812518,\n        \"num_unique_values\": 19958,\n        \"samples\": [\n          -418.009411,\n          -423.031338,\n          -418.10865\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cv\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.03256647446303,\n        \"min\": 11.122,\n        \"max\": 45.647,\n        \"num_unique_values\": 11117,\n        \"samples\": [\n          36.062,\n          35.763,\n          28.297\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "df_sample = df.sample(n=20000, random_state=26)\n",
        "df_sample.to_csv('/content/drive/MyDrive/qm9_sample.csv', index=False)"
      ],
      "metadata": {
        "id": "PGiY4wbQrmqs"
      },
      "execution_count": 62,
      "outputs": []
    }
  ]
}
